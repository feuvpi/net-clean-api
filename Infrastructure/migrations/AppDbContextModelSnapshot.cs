// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using team_manegement_api.Data;

#nullable disable

namespace team_manegement_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("team_manegement_api.Models.Atleta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Altura")
                        .HasColumnType("real");

                    b.Property<int>("Assistencias")
                        .HasColumnType("integer");

                    b.Property<int>("CartoesAmarelos")
                        .HasColumnType("integer");

                    b.Property<int>("CartoesVermelhos")
                        .HasColumnType("integer");

                    b.Property<string>("Dominancia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gols")
                        .HasColumnType("integer");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<int>("Minutagem")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PartidaId")
                        .HasColumnType("uuid");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<Guid?>("TimeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PartidaId");

                    b.HasIndex("TimeId");

                    b.ToTable("Atletas");
                });

            modelBuilder.Entity("team_manegement_api.Models.Competicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Competicao");
                });

            modelBuilder.Entity("team_manegement_api.Models.ExameMedico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Anexo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<Guid>("AtletaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AtletaId");

                    b.ToTable("ExamesMedicos");
                });

            modelBuilder.Entity("team_manegement_api.Models.Gol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AtletaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PartidaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AtletaId");

                    b.HasIndex("PartidaId");

                    b.ToTable("Gols");
                });

            modelBuilder.Entity("team_manegement_api.Models.Partida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CompeticaoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataHorario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeAdversario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CompeticaoId");

                    b.HasIndex("TimeId");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("team_manegement_api.Models.Time", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("IdadeLimite")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("team_manegement_api.Models.Atleta", b =>
                {
                    b.HasOne("team_manegement_api.Models.Partida", null)
                        .WithMany("JogadoresRelacionados")
                        .HasForeignKey("PartidaId");

                    b.HasOne("team_manegement_api.Models.Time", null)
                        .WithMany("Atletas")
                        .HasForeignKey("TimeId");
                });

            modelBuilder.Entity("team_manegement_api.Models.ExameMedico", b =>
                {
                    b.HasOne("team_manegement_api.Models.Atleta", "Atleta")
                        .WithMany()
                        .HasForeignKey("AtletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");
                });

            modelBuilder.Entity("team_manegement_api.Models.Gol", b =>
                {
                    b.HasOne("team_manegement_api.Models.Atleta", "Atleta")
                        .WithMany()
                        .HasForeignKey("AtletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("team_manegement_api.Models.Partida", "Partida")
                        .WithMany("GolsRealizados")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("team_manegement_api.Models.Partida", b =>
                {
                    b.HasOne("team_manegement_api.Models.Competicao", null)
                        .WithMany("Partidas")
                        .HasForeignKey("CompeticaoId");

                    b.HasOne("team_manegement_api.Models.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("team_manegement_api.Models.Competicao", b =>
                {
                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("team_manegement_api.Models.Partida", b =>
                {
                    b.Navigation("GolsRealizados");

                    b.Navigation("JogadoresRelacionados");
                });

            modelBuilder.Entity("team_manegement_api.Models.Time", b =>
                {
                    b.Navigation("Atletas");
                });
#pragma warning restore 612, 618
        }
    }
}
